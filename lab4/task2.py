import matplotlib.pyplot as plt
import pandas as pd

# 1. Загрузите данные из файла «athlete_events.csv» о спортсменах – участниках олимпийских игр
table = pd.read_csv('res/athlete_events.csv')

# 2. Определите количество значений каждого из признаков в загруженных данных.
# По каким значениям имеются не все данные? По какому значению отсутствующих
# данных больше всего? Подсказка: воспользуйтесь функцией count или info.
print("Количество значений:")
for column in table.columns:
    print(f"{column}: {table[column].count()}")
print("\n")

# 3. Выведите статистическую информацию (среднее значение, стандартное
# отклонение, минимальное и максимальное значение, значение квартилей)
# по полям: возраст, рост, вес.
# Подсказка: воспользуйтесь функцией describe.
stats = table[['Age', 'Height', 'Weight']].describe()
print("Статистическая информация по полям: возраст, рост, вес:")
print(stats)
print("\n")

# 4. Ответьте на вопросы, написав соответствующий код:
# 1) Сколько лет было самому молодому участнику олимпийских игр в 1992 году?
# Как звали этого участника и в какой дисциплине он(а) участвовал(а)?
youngerPlayer = table[table['Year'] == 1992].nsmallest(1, 'Age')
print("Сколько лет было самому молодому участнику олимпийских игр в 1992г - ")
print(youngerPlayer[['Name', 'Age', 'Event']])
print("\n")

# 2) Выведите список всех видов спорта, которые когда-либо входили в программу олимпийских игр.
# (Каждый вид спорта должен присутствовать в списке один раз)
result = table['Sport'].unique()
print("Список всех видов спорта:")
print(result)
print("\n")

# 3) Каков средний рост теннисисток (пол – женский, вид спорта – большой теннис), участвовавших в играх 2000 года?
tennisPlayers = table[(table['Year'] == 2000) & (table['Sex'] == 'F') & (table['Sport'] == 'Tennis')]
avgHeight = tennisPlayers['Height'].mean()
print(f"Средний рост теннисисток на играх 2000г = {avgHeight}")
print("\n")

# 4) Сколько золотых медалей в настольном теннисе выиграл Китай на ОИ в 2008 году?
goldMedalChina = table[
    (table['Year'] == 2008) & (table['NOC'] == 'CHN') &
    (table['Sport'] == 'Table Tennis') & (table['Medal'] == 'Gold')
].shape[0] # кол-во строк
print(f"Кол-во золотых медалей Китая в настольном теннисе в 2008г = {goldMedalChina}")
print("\n")

# 5) Как изменилось количество видов спорта на летних ОИ в 2004 году по сравнению с летними ОИ в 1988 году?
sports2004 = table[(table['Year'] == 2004) & (table['Season'] == 'Summer')]['Sport'].nunique()
sports1988 = table[(table['Year'] == 1988) & (table['Season'] == 'Summer')]['Sport'].nunique()
print(f"Количество видов спорта увеличилось на {sports2004 - sports1988}")
print("\n")

# 6) Постройте гистограмму распределения возраста мужчин-керлингистов (Sport == ‘Curling’), участвовавших в олимпиаде 2014 года.
# Подсказка: для построения гистограммы можно использовать функцию hist() из библиотеки matplotlib с параметрами по умолчанию
# (либо можете использовать любую другую функцию на свое усмотрение).
playersIn2014 = table[(table['Year'] == 2014) & (table['Sport'] == 'Curling') & (table['Sex'] == 'M')]
age = playersIn2014['Age']

# построение гистограммы
plt.hist(age, edgecolor='w')
plt.title('Распределение возраста керлингистов на олимпиаде 2014г')
plt.xlabel('Возраст')
plt.ylabel('Частота')
plt.show()
print("\n")

# 7) Рассмотрим зимнюю олимпиаду 2006 года.
# Сгруппируйте данные по стране (используйте признак «NOC») и посчитайте для каждой страны количество завоеванных медалей и средний возраст спортсменов.
# Выведите только те страны, которые завоевали хотя бы одну медаль.
dataFor2006 = table[(table['Year'] == 2006) & (table['Season'] == 'Winter')]
dataResult = dataFor2006.groupby('NOC').agg({'Medal': 'count', 'Age': 'mean'})
result = dataResult[dataResult['Medal'] > 0]
print("Кол-во медалей и средний возраст спортсменов на зимней олимпиаде 2006г по странам:")
print(result)
print("\n")

# 8) Продолжим рассматривать зимнюю олимпиаду 2006 года.
# Посчитайте, сколько медалей каждого достоинства завоевала каждая из
# стран-участниц (страны, не завоевавшие ни одной медали, можно не выводить).
# Для этого сгруппируйте данные по стране и по виду медали.
# Представьте данные в виде сводной таблицы (pivot_table).
# В сводной таблице не должно быть отсутствующих значений (NaN), замените их на 0.
result = dataFor2006.pivot_table(
    index = 'NOC',
    columns = 'Medal',
    values = 'ID',
    aggfunc = 'count',
    fill_value = 0
)
print("Завоеванные медали на зимней олимпиаде 2006г по странам:")
print(result)